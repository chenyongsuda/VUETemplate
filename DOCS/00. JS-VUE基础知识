
import可以有多个，export default仅有一个。 
具体使用： 
1、
//demo1.js
export const str = 'hello world'

export function f(a){
    return a+1
}

对应的导入方式：
//demo2.js
import { str, f } from 'demo1' //也可以分开写两次，导入的时候带花括号
1
2
2、

//demo1.js
export default const str = 'hello world'
对应的导入方式：
//demo2.js
import str from 'demo1' //导入的时候没有花括号




=====================================================================================

****整体功能比较****
npm install module：

会把module包安装到node_modules目录中
不会修改package.json
之后运行npm install 命令时，不会自动安装module包
npm install module --save

会把module包安装到node_modules目录汇总
会修改package.json，将模块名和版本号添加到dependencies部分
之后运行npm install 命令时，会自动安装module包
之后运行npm install --production或者注明NODE_ENV变量值为production时，会自动安装 module到node_modules目录中,即是在线上环境运行时会将包安装
npm install module --save-dev

会把module包安装到node_modules目录汇总
会修改package.json，将模块名和版本号添加到devDependencies部分
之后运行npm install 命令时，会自动安装module包
之后运行npm install --production或者注明NODE_ENV变量值为production时，不会自动安装msbuild到node_modules目录中，即是在线上环境并不会进行安装。
首先，--save和--save-dev可以省掉我们手动修改package.json文件的步骤。我们使用的一些打包工具、非项目必须依赖的都放在devDependencies中。


